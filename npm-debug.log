0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/4.2.1/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.14.7
3 info using node@v4.2.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/aimingoo/work/redpoll',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/aimingoo/.npm/redpoll/1.1.0/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/aimingoo/.npm/redpoll/1.1.0/package.tgz',
9 verbose tar pack   '/Users/aimingoo/work/redpoll' ]
10 verbose tarball /Users/aimingoo/.npm/redpoll/1.1.0/package.tgz
11 verbose folder /Users/aimingoo/work/redpoll
12 info prepublish redpoll@1.1.0
13 verbose addLocalTarball adding from inside cache /Users/aimingoo/.npm/redpoll/1.1.0/package.tgz
14 silly cache afterAdd redpoll@1.1.0
15 verbose afterAdd /Users/aimingoo/.npm/redpoll/1.1.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/aimingoo/.npm/redpoll/1.1.0/package/package.json written
17 silly publish { name: 'redpoll',
17 silly publish   description: 'redpoll is implement of PEDT specifications in NodeJs.',
17 silly publish   author: { name: 'aimingoo' },
17 silly publish   repository: { type: 'git', url: 'git://github.com/aimingoo/redpoll.git' },
17 silly publish   dependencies: { request: '^2.65.0' },
17 silly publish   main: 'Distributed.js',
17 silly publish   license: 'Apache-2.0',
17 silly publish   version: '1.1.0',
17 silly publish   readme: '# redpoll\n\nredpoll is implement of PEDT - Parallel Exchangeable Distribution Task specifications for NodeJS.\n\nPEDT v1.1 specifications supported.\n\n### Table of Contents\n\n  * [install](#install)\n  * [import and usage](#import-and-usage)\n  * [options](#options)\n  * [interfaces](#interfaces)\n    * [pedt.run](#pedtrun)\n    * [pedt.map](#pedtmap)\n    * [pedt.execute_task](#pedtexecute_task)\n    * [pedt.register_task](#pedtregister_task)\n    * [pedt.require](#pedtrequire)\n    * [pedt.upgrade](#pedtupgrade)\n    * [pedt.LOGGER](#pedtlogger)\n    * [pedt.TASK_XXX](#pedttask_xxx)\n    * [pedt.version](#pedtversion)\n  * [helpers](#helpers)\n    * [Redpoll.infra.taskhelper](#redpollinfrataskhelper)\n    * [Redpoll.infra.httphelper](#redpollinfrahttphelper)\n    * [Redpoll.infra.requestdata](#redpollinfrarequestdata)\n  * [testcase](#testcase)\n  * [history](#history)\n\n# install\n\n> npm install redpoll\n\n# import and usage\n\n``` javascript\nvar Redpoll = require(\'redpoll\');\nvar options = {};\nvar pedt = new Redpoll(options);\n\npedt.run(...)\n\t.then(function(result){\n\t\t...\n\t})\n```\n\n# options\n\nthe full options schema:\n\n``` javascript\noptions = {\n\tdistributed_request: function(arrResult) { .. }, // a http client implement\n    default_rejected: function(message) { .. }, // a default rejected inject\n\tsystem_route: { .. }, // any key/value pairs\n\ttask_register_center: {\n\t\tdownload_task: function(taskId) { .. }, // PEDT interface\n\t\tregister_task: function(taskDef) { .. }  // PEDT interface\n\t},\n\tresource_status_center: {\n\t\trequire: function(resId) {..}\t// PEDT interface\n\t}\n}\n```\n\n# interfaces\n\n> for detail, @see ${readpoll}/infra/specifications/*\n\nall interfaces are promise supported except pedt.upgrade() and helpers.\n\n## pedt.run\n\n``` javascript\npedt.run = function(task, args)\n```\n\nrun a task (taskId, function or taskObject) with args.\n\n## pedt.map\n\n``` javascript\npedt.map = function(distributionScope, taskId, args)\n```\n\nmap taskId to distributionScope with args, and get result array.\n\ndistributionScope will parse by pedt.require().\n\n## pedt.execute_task\n\n``` javascript\npedt.execute_task = function(taskId, args)\n```\n\nrun a taskId with args. pedt.run(taskId) will call this.\n\n## pedt.register_task\n\n``` javascript\npedt.register_task = function(task)\n```\n\nrun a task and return taskId.\n\nthe "task" is a taskDef text or local taskObject.\n\n## pedt.require\n\n``` javascript\npedt.require = function(token)\n```\n\nrequire a resource by token. the token is distributionScope or system token, or other.\n\nthis is n4c expanded interface, resource query interface emmbedded.\n\n## pedt.upgrade\n\n``` javascript\nthis.upgrade = function(newOptions)\n```\n\nupgrade current Redpoll/PEDT instance with newOptions. @see [options](#options)\n\nthis is redpoll expanded interface.\n\n## pedt.LOGGER\n\nthis is expanded reserved tokens. it\'s constant:\n\n> LOGGER: "!"\n\nso, you can option/reset/upgrade local default logger in your code:\n\n``` javascript\npedt.upgrade({ system_route: {[pedt.LOGGER]: function(message) {\n  console.log(message)\n}}});\n```\n\nor disable it:\n\n``` javascript\npedt.upgrade({ system_route: {[pedt.LOGGER]: Promise.resolve(false)}}),\n```\n\nor resend message to remote nodes/scope:\n\n``` javascript\n// @see ${redpoll}/testcase/t_executor.js\npedt.register_task(a_task_def).then(set_remote_logger)\n```\n\nand, you can call the logger at anywhere:\n\n``` javascript\npedt.require(pedt.LOGGER).then(function(logger) {\n  pedt.run(logger, message)\n})\n```\n\nor public a log_print_task, register and run it:\n\n``` javascript\nvar log_print_task = {\n  message: \'will replaced\',\n  task: def.require(def.LOGGER),\n  promised: function(log) {\n    return this.run(log.task, log.message))\n  }\n}\nvar taskId = \'<get result from pedt.register_task(log_print_task)>\'\npedt.run(taskId, {message: \'some notice/error information\'})\n```\n\nthis is redpoll expanded interface.\n\n## pedt.TASK_XXX\n\nsome task constants, inherited from def.TASK_XXX in Redpoll.infra.taskhelper. include:\n\n``` javascript\nTASK_BLANK\nTASK_SELF\nTASK_RESOURCE\n```\n\nex:\n\n``` javascript\ntaskDef = {\n  // !! static recursion !!\n  x: def.run(def.TASK_SELF, ..), \n  // require local resource\n  y: def.require(\'registed_local_resource_name\'),\n\n  promised: function(taskResult) {\n    // !! dynamic recursion !!\n    this.run(taskResult.taskId, ..);\n    // try execute blank task\n    this.execute_task(this.TASK_BLANK, {..})\n  }\n}\n```\n\nthis is redpoll expanded interface.\n\n## pedt.version\n\nget support version of PEDT specifications, it\'s string value.\n\nthis is redpoll expanded interface.\n\n# helpers\n\nsome tool/helpers include in the package.\n\n## Redpoll.infra.taskhelper\n\n``` javascript\nvar Redpoll = require(\'redpoll\');\nvar def = Redpoll.infra.taskhelper;\nvar taskDef = {\n\tx: def.run(...),\n\ty: def.map(...),\n\t...\n}\n```\n\na taskDef define helper. @see:\n\n> $(redpoll)/testcase/t_executor.js\n\n## Redpoll.infra.httphelper\n\n``` javascript\nvar Redpoll = require(\'redpoll\');\nvar options = {\n\t...,\n\tdistributed_request = Redpoll.infra.httphelper.distributed_request\n}\n```\n\na recommented/standard distributed request.\n\n## Redpoll.infra.requestdata\n\n``` javascript\nvar Redpoll = require(\'redpoll\');\nvar request_parse = Redpoll.infra.requestdata.parse;\n\n...\nrequire("http").createServer(function(request, response) {\n\tvar params = request_parse(request);\n\t...\n}\n```\n\na requestdata parser for http server/daemon, PEDT standard requests supported. @see:\n\n> $(redpoll)/testcase/executor.js\n\n# testcase\n\ntry these:\n\n``` bash\n> git clone \'https://github.com/aimingoo/redpoll\'\n> cd redpoll\n> npm install\n> node testcase/t_executor.js\n\n> #(start new shell and continue)\n> curl -s \'http://127.0.0.1:8032/redpoll/execute_task:c2eb2597e461aa3aa0e472f52e92fe0b\'\n```\n\n# history\n\n``` text\n2015.11.28\tv1.1.0 released.\n\t- recursion taskDef supported, def.TASK_SELF point to self.\n\t- def.require() supported, and other def.XXX constants published.\n\t- standard logger and rejected inject.\n\t- taskDef.rejected supported.\n2015.11.07\tv1.0.0 released.\n```\n\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '1201d8359500d14f426e1d8a00cb1e5a512d5752',
17 silly publish   bugs: { url: 'https://github.com/aimingoo/redpoll/issues' },
17 silly publish   homepage: 'https://github.com/aimingoo/redpoll#readme',
17 silly publish   _id: 'redpoll@1.1.0',
17 silly publish   scripts: {},
17 silly publish   _shasum: 'bd76d009365e1b6d2c85aeaf4711f9be5bb6609a',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name redpoll
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/redpoll
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/aimingoo/.npm/redpoll/1.1.0/package.tgz
25 verbose request uri https://registry.npmjs.org/redpoll
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 14:14:11
28 verbose request using bearer token for auth
29 verbose request id 23d1d3582cd941b9
30 http request PUT https://registry.npmjs.org/redpoll
31 http 403 https://registry.npmjs.org/redpoll
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Sat, 28 Nov 2015 06:12:23 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-itm7422-ITM',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1448691142.722539,VS0,VE749' }
33 verbose request invalidating /Users/aimingoo/.npm/registry.npmjs.org/redpoll on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 1.1.0." : redpoll
35 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
35 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
35 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1063:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
36 verbose statusCode 403
37 verbose pkgid redpoll
38 verbose cwd /Users/aimingoo/work/redpoll
39 error Darwin 14.4.0
40 error argv "/usr/local/Cellar/node/4.2.1/bin/node" "/usr/local/bin/npm" "publish"
41 error node v4.2.1
42 error npm  v2.14.7
43 error code E403
44 error "You cannot publish over the previously published version 1.1.0." : redpoll
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
